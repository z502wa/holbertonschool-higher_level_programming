The ``1-my_list`` module
======================

Using ``MyList``
-------------------

This is a text file in reStructuredText format. First import
``MyList`` from the ``1-my_list`` module:

    >>> MyList = __import__('1-my_list').MyList

Now use it:

Test with positive numbers:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> print(my_list)
    [1, 4, 2, 3, 5]
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]
    >>> print(my_list)
    [1, 4, 2, 3, 5]

Test with negative numbers:
    >>> my_list = MyList()
    >>> my_list.append(-1)
    >>> my_list.append(-4)
    >>> my_list.append(-2)
    >>> my_list.append(-3)
    >>> my_list.append(-5)
    >>> my_list.print_sorted()
    [-5, -4, -3, -2, -1]

Test with mixed positive and negative numbers:
    >>> my_list = MyList()
    >>> my_list.append(-1)
    >>> my_list.append(0)
    >>> my_list.append(1)
    >>> my_list.append(-2)
    >>> my_list.append(2)
    >>> my_list.print_sorted()
    [-2, -1, 0, 1, 2]

Test with empty list:
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

Test with one element:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.print_sorted()
    [1]

Test with duplicate values:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(2)
    >>> my_list.append(1)
    >>> my_list.append(3)
    >>> my_list.append(2)
    >>> my_list.print_sorted()
    [1, 1, 2, 2, 3]

Test inheritance from list:
    >>> my_list = MyList()
    >>> isinstance(my_list, list)
    True

Test that MyList is a subclass of list:
    >>> issubclass(MyList, list)
    True

Test with list initialization:
    >>> my_list = MyList([3, 1, 4, 1, 5])
    >>> my_list.print_sorted()
    [1, 1, 3, 4, 5]
    >>> print(my_list)
    [3, 1, 4, 1, 5]
