The "2-matrix_divided" module
=========================

Using "matrix_divided"
----------------------

import module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Divide simple:
    >>> matrix_divided([[1, 2],[3, 4]], 2)
    [[0.5, 1.0], [1.5, 2.0]]

Matrix with floats and rounded to 2 decimal places:
    >>> matrix_divided([[1.5, 2.5],[3.5, 4.5]], 2)
    [[0.75, 1.25], [1.75, 2.25]]

Divider with floats:
    >>> matrix_divided([[1, 2],[3, 4]], 1.5)
    [[0.66, 1.33], [2.0, 2.66]]

If matrix is a list and matrix is string:
    >>> matrix_divided([1, "2", 3], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

If the list of matrix is not same size:
    >>> matrix_divided([[1, 2, 3], [4, 5]], 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

If divider is a string:
    >>> matrix_divided([[1, 2],[3, 4]], "2")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

If divider is zero:
    >>> matrix_divided([[1, 2],[3, 4]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

If no divider:
    >>> matrix_divided([[1, 2],[3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
